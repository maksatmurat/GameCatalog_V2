@rendermode InteractiveServer
@using System.Text.RegularExpressions
<div class="col-sm-12 col-md-6 col-lg-4 p-3 text-center">
    <div class="game-name">
        <a href="@url">@Game!.Name</a>
    </div>
    <hr class="hrfixed" />
    <div class="card-image">
        <a href="@url">
            <img style="max-width: min(400px,100%); height: auto" src="@Game.Image" alt="@Game.Name" class="game-image" />
        </a>
    </div>
    <hr class="hrfixed" />
    <div class="game-card-footer">
        <div class="btn-group my-3 text-center" role="group">
            <a href="#" class="btn btn-outline-info">
                @if (IsBase64(Game!.Image))
                {
                    <img src="data:image/jpeg;base64,@Game.Image" class=game-image"" />
                }
                else
                {
                    <img src="/MainModule/icons/pen-to-square-solid.svg" style="width:20px;height:auto" />
                }
            </a>
            <button type="button" class="btn btn-outline-danger">
                <img src="/MainModule/icons/trash-can-solid.svg" style="width:20px;height:auto" />Delete
            </button>
        </div>
    </div>
</div>

@code{
    [Parameter]
    public GameModel? Game { get; set; }
    string url = string.Empty;

    protected override void OnInitialized()
    {
        url = $"gamesdetails/{Game!.Id}/{Uri.EscapeDataString(Game.Name)}";
    }
    bool IsBase64(string value)
    {
        value = value.Trim();
        return ((value.Length % 4 == 0) && Regex.IsMatch(value, @"^[a-zA-Z0-9\+/]*={0,3}$", RegexOptions.None));
    }

}